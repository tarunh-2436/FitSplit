{"ast":null,"code":"var _jsxFileName = \"/home/navadeep/Documents/Projects/MPMC/client/src/pages/SplitPage.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { motion } from 'framer-motion';\nimport { Activity, ArrowLeft, Info, Calendar, ChevronDown } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport ConsistencyContext from '../context/ConsistencyContext';\nimport LoadingState from '../components/LoadingState';\nimport Card from '../components/ui/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplitPage = () => {\n  _s();\n  // Destructure context, getting userData and loading state\n  const {\n    userData,\n    loading\n  } = useContext(ConsistencyContext);\n\n  // Get all relevant data from userData\n  const {\n    score,\n    userType,\n    frequency,\n    regularity,\n    recency\n  } = userData;\n\n  // --- Animation Variants ---\n  const pageVariants = {\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    in: {\n      opacity: 1,\n      y: 0\n    },\n    out: {\n      opacity: 0,\n      y: -20\n    }\n  };\n  const transition = {\n    duration: 0.4,\n    ease: 'easeInOut'\n  };\n  const containerVariants = {\n    hidden: {\n      opacity: 0\n    },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n  const itemVariants = {\n    hidden: {\n      opacity: 0,\n      y: 20\n    },\n    visible: {\n      opacity: 1,\n      y: 0\n    }\n  };\n  // --- End Animation Variants ---\n\n  // Determine theme based on score\n  const getTheme = () => {\n    if (score >= 80) {\n      return {\n        headerBg: 'bg-green-50',\n        border: 'border-green-200',\n        accentBg: 'bg-green-50',\n        iconColor: 'text-green-600',\n        headingColor: 'text-gray-800',\n        textColor: 'text-gray-600',\n        summaryHoverBg: 'hover:bg-green-100'\n      };\n    } else if (score >= 40) {\n      return {\n        headerBg: 'bg-blue-50',\n        border: 'border-blue-200',\n        accentBg: 'bg-blue-50',\n        iconColor: 'text-blue-600',\n        headingColor: 'text-gray-800',\n        textColor: 'text-gray-600',\n        summaryHoverBg: 'hover:bg-blue-100'\n      };\n    } else {\n      return {\n        headerBg: 'bg-amber-50',\n        border: 'border-amber-200',\n        accentBg: 'bg-amber-50',\n        iconColor: 'text-amber-600',\n        headingColor: 'text-gray-800',\n        textColor: 'text-gray-600',\n        summaryHoverBg: 'hover:bg-amber-100'\n      };\n    }\n  };\n\n  // Determine workout frequency based on regularity and score\n  const getIdealWorkoutDays = () => {\n    if (score >= 80) return 5; // More advanced users can handle 5-6 workouts\n    if (score >= 60) return 4; // Consistent intermediate users: 4 days\n    if (score >= 40) return 3; // Beginning intermediate users: 3 days\n    return 2; // Beginners: 2-3 days\n  };\n\n  // Analyze time pattern to recommend workout times\n  const getRecommendedTime = () => {\n    if (!regularity || !regularity.time_pattern) return \"morning\";\n    const {\n      morning = 0,\n      afternoon = 0,\n      evening = 0\n    } = regularity.time_pattern;\n    if (morning > afternoon && morning > evening) return \"morning\";\n    if (evening > morning && evening > afternoon) return \"evening\";\n    return \"afternoon\";\n  };\n\n  // Analyze day pattern to recommend workout days\n  const getRecommendedDays = () => {\n    if (!regularity || !regularity.day_pattern) {\n      return [\"Monday\", \"Wednesday\", \"Friday\"]; // Default\n    }\n\n    // Get days sorted by frequency\n    const dayPattern = regularity.day_pattern;\n    const sortedDays = Object.entries(dayPattern).sort((a, b) => b[1] - a[1]).map(entry => entry[0]);\n    const workoutDays = getIdealWorkoutDays();\n    const weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\n    // If we can't get enough days from their pattern, use most frequent plus defaults\n    if (sortedDays.length < workoutDays) {\n      const recommendedDays = [...sortedDays];\n      for (const day of weekdays) {\n        if (!recommendedDays.includes(day)) {\n          recommendedDays.push(day);\n          if (recommendedDays.length === workoutDays) break;\n        }\n      }\n      return recommendedDays;\n    }\n\n    // Return their top most frequent days\n    return sortedDays.slice(0, workoutDays);\n  };\n\n  // Generate dynamic workout split based on user data\n  const renderDynamicWorkoutSplit = () => {\n    if (!score && score !== 0) {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"p-6 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-orange-600\",\n          children: \"Workout split information is currently unavailable.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this);\n    }\n    const theme = getTheme();\n    const workoutDays = getIdealWorkoutDays();\n    const recommendedTime = getRecommendedTime();\n    const recommendedDays = getRecommendedDays();\n    const summaryStyles = `flex items-center justify-between w-full p-4 ${theme.accentBg} rounded-lg cursor-pointer ${theme.summaryHoverBg} transition-colors group`;\n    const detailsContentStyles = `p-4 pt-2 pb-4 bg-white rounded-b-lg`;\n\n    // Determine split type based on score and regularity\n    let splitType, splitDescription;\n    if (score >= 80) {\n      splitType = \"Advanced Split\";\n      splitDescription = workoutDays >= 5 ? \"Push/Pull/Legs split for optimal muscle growth\" : \"Upper/Lower body split with high intensity\";\n    } else if (score >= 40) {\n      splitType = \"Intermediate Split\";\n      splitDescription = workoutDays >= 4 ? \"Upper/Lower split focusing on strength and hypertrophy\" : \"3-day full body with progressive overload\";\n    } else {\n      splitType = \"Beginner-Friendly Split\";\n      splitDescription = \"Full body workouts focusing on form and consistency\";\n    }\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      variants: containerVariants,\n      initial: \"hidden\",\n      animate: \"visible\",\n      className: `bg-white rounded-xl shadow-card overflow-hidden border ${theme.border}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${theme.headerBg} p-6 border-b ${theme.border}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Activity, {\n            className: `mr-3 ${theme.iconColor}`,\n            size: 28\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: `text-2xl font-bold ${theme.headingColor}`,\n            children: userType ? `${userType} - ${splitType}` : splitType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `mt-2 ${theme.textColor}`,\n          children: splitDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          variants: itemVariants,\n          className: `flex items-start text-gray-700 ${theme.accentBg} p-4 rounded-lg border ${theme.border}`,\n          children: [/*#__PURE__*/_jsxDEV(Info, {\n            size: 20,\n            className: `mr-3 ${theme.iconColor} mt-0.5 flex-shrink-0`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm mb-2\",\n              children: [\"Based on your consistency score of \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 52\n              }, this), \" and activity patterns, we recommend training \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: [workoutDays, \" days/week\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 39\n              }, this), \" during the \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: recommendedTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm\",\n              children: [\"Your most consistent days are: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: recommendedDays.join(\", \")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), generateWorkoutDetails(score, recommendedDays, workoutDays, theme, itemVariants, summaryStyles, detailsContentStyles)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: \"initial\",\n    animate: \"in\",\n    exit: \"out\",\n    variants: pageVariants,\n    transition: transition,\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        delay: 0.2\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"inline-flex items-center text-sm text-indigo-600 hover:text-indigo-800 mb-6 group font-medium\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          size: 16,\n          className: \"mr-1 group-hover:-translate-x-1 transition-transform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), \"Back to Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.h1, {\n      initial: {\n        opacity: 0,\n        y: -10\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        delay: 0.1\n      },\n      className: \"flex items-center text-3xl font-bold text-gray-800 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(Activity, {\n        className: \"mr-3 text-indigo-600\",\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), \"Your Personalized Workout Plan\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Card, {\n      className: \"flex items-center justify-center min-h-[400px]\",\n      children: /*#__PURE__*/_jsxDEV(LoadingState, {\n        message: \"Creating Your Workout Plan...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this) : renderDynamicWorkoutSplit()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to generate workout details based on user score\n_s(SplitPage, \"iUrJbgRZsrAdxvnyTI4bve/x/l0=\");\n_c = SplitPage;\nfunction generateWorkoutDetails(score, recommendedDays, workoutDays, theme, itemVariants, summaryStyles, detailsContentStyles) {\n  // Default exercises by category\n  const exercises = {\n    push: {\n      beginner: [\"Push-ups: 3 sets x 8-12 reps\", \"Dumbbell Shoulder Press: 3 sets x 10-12 reps\", \"Incline Dumbbell Press: 3 sets x 10-12 reps\", \"Tricep Dips (assisted if needed): 3 sets x 8-12 reps\"],\n      intermediate: [\"Bench Press: 4 sets x 8-10 reps\", \"Incline Dumbbell Press: 3 sets x 10-12 reps\", \"Overhead Press: 3 sets x 8-10 reps\", \"Lateral Raises: 3 sets x 12-15 reps\", \"Tricep Pushdowns: 3 sets x 12-15 reps\"],\n      advanced: [\"Barbell Bench Press: 4 sets x 6-8 reps\", \"Incline Dumbbell Press: 4 sets x 8-10 reps\", \"Overhead Press: 3 sets x 8-10 reps\", \"Cable Flyes: 3 sets x 12-15 reps\", \"Skull Crushers: 3 sets x 10-12 reps\", \"Lateral Raises: 4 sets x 12-15 reps\"]\n    },\n    pull: {\n      beginner: [\"Dumbbell Rows: 3 sets x 10-12 reps\", \"Lat Pulldowns: 3 sets x 10-12 reps\", \"Face Pulls: 3 sets x 12-15 reps\", \"Bicep Curls: 3 sets x 10-12 reps\"],\n      intermediate: [\"Pull-ups (assisted if needed): 3 sets x 6-10 reps\", \"Barbell Rows: 3 sets x 8-10 reps\", \"Seated Cable Rows: 3 sets x 10-12 reps\", \"Face Pulls: 3 sets x 15-20 reps\", \"Bicep Curls: 3 sets x 10-12 reps\"],\n      advanced: [\"Weighted Pull-ups: 4 sets x 6-8 reps\", \"Barbell Rows: 4 sets x 6-10 reps\", \"Deadlifts: 4 sets x 5-8 reps\", \"Cable Rows: 3 sets x 10-12 reps\", \"Barbell Curls: 4 sets x 8-10 reps\", \"Hammer Curls: 3 sets x 10-12 reps\"]\n    },\n    legs: {\n      beginner: [\"Goblet Squats: 3 sets x 10-12 reps\", \"Romanian Deadlifts: 3 sets x 10-12 reps\", \"Leg Press: 3 sets x 12-15 reps\", \"Calf Raises: 3 sets x 15-20 reps\"],\n      intermediate: [\"Barbell Squats: 4 sets x 8-10 reps\", \"Romanian Deadlifts: 3 sets x 8-10 reps\", \"Walking Lunges: 3 sets x 10 reps per leg\", \"Leg Extensions: 3 sets x 12-15 reps\", \"Leg Curls: 3 sets x 12-15 reps\", \"Calf Raises: 4 sets x 15-20 reps\"],\n      advanced: [\"Back Squats: 5 sets x 5-8 reps\", \"Romanian Deadlifts: 4 sets x 8-10 reps\", \"Leg Press: 4 sets x 10-12 reps\", \"Walking Lunges: 3 sets x 12 reps per leg\", \"Leg Extensions: 3 sets x 12-15 reps\", \"Leg Curls: 3 sets x 12-15 reps\", \"Standing Calf Raises: 5 sets x 15-20 reps\"]\n    },\n    fullBody: {\n      beginner: [\"Goblet Squats: 3 sets x 10-12 reps\", \"Push-ups (or knee push-ups): 3 sets x 8-12 reps\", \"Dumbbell Rows: 3 sets x 10-12 reps per arm\", \"Dumbbell Shoulder Press: 3 sets x 10-12 reps\", \"Plank: 3 sets x 30-45 seconds\"],\n      intermediate: [\"Barbell Squats: 3 sets x 8-10 reps\", \"Bench Press: 3 sets x 8-10 reps\", \"Bent-Over Rows: 3 sets x 8-10 reps\", \"Overhead Press: 3 sets x 8-10 reps\", \"Romanian Deadlifts: 3 sets x 8-10 reps\", \"Bicep Curls: 3 sets x 10-12 reps\", \"Tricep Extensions: 3 sets x 10-12 reps\"]\n    },\n    upperLower: {\n      intermediate: {\n        upper: [\"Bench Press: 3 sets x 6-10 reps\", \"Barbell Rows: 3 sets x 8-10 reps\", \"Overhead Press: 3 sets x 8-10 reps\", \"Lat Pulldowns: 3 sets x 10-12 reps\", \"Incline Dumbbell Press: 3 sets x 10-12 reps\", \"Bicep Curls: 3 sets x 10-12 reps\", \"Tricep Pushdowns: 3 sets x 10-12 reps\"],\n        lower: [\"Barbell Squats: 3 sets x 6-10 reps\", \"Romanian Deadlifts: 3 sets x 8-10 reps\", \"Leg Press: 3 sets x 10-12 reps\", \"Walking Lunges: 3 sets x 10 reps per leg\", \"Leg Extensions: 3 sets x 12-15 reps\", \"Leg Curls: 3 sets x 12-15 reps\", \"Calf Raises: 4 sets x 15-20 reps\", \"Planks: 3 sets x 45-60 seconds\"]\n      },\n      advanced: {\n        upper: [\"Bench Press: 4 sets x 6-8 reps\", \"Weighted Pull-ups: 4 sets x 6-8 reps\", \"Overhead Press: 4 sets x 6-8 reps\", \"Barbell Rows: 4 sets x 6-8 reps\", \"Incline Dumbbell Press: 3 sets x 8-10 reps\", \"Lateral Raises: 3 sets x 12-15 reps\", \"Skull Crushers: 3 sets x 10-12 reps\", \"Barbell Curls: 3 sets x 10-12 reps\"],\n        lower: [\"Barbell Squats: 5 sets x 5-8 reps\", \"Romanian Deadlifts: 4 sets x 6-8 reps\", \"Leg Press: 4 sets x 8-10 reps\", \"Bulgarian Split Squats: 3 sets x 8-10 reps per leg\", \"Leg Extensions: 3 sets x 12-15 reps\", \"Leg Curls: 3 sets x 12-15 reps\", \"Standing Calf Raises: 4 sets x 15-20 reps\", \"Hanging Leg Raises: 3 sets x 12-15 reps\"]\n      }\n    }\n  };\n\n  // Sort workout days to match recommended days if possible\n  const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\n  // Get appropriate category of difficulty\n  let difficulty;\n  if (score >= 80) {\n    difficulty = \"advanced\";\n  } else if (score >= 40) {\n    difficulty = \"intermediate\";\n  } else {\n    difficulty = \"beginner\";\n  }\n\n  // Generate workout details based on score and frequency\n  const workoutDetails = [];\n\n  // For beginners (score < 40): Full body workouts 2-3x per week\n  if (score < 40) {\n    const workoutDays = recommendedDays.slice(0, Math.min(3, recommendedDays.length));\n\n    // Create full body workouts for each day\n    workoutDays.forEach((day, index) => {\n      workoutDetails.push(/*#__PURE__*/_jsxDEV(motion.details, {\n        variants: itemVariants,\n        className: \"rounded-lg overflow-hidden border border-gray-200 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          className: summaryStyles,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `flex items-center text-lg font-semibold ${theme.headingColor}`,\n            children: [/*#__PURE__*/_jsxDEV(Calendar, {\n              className: \"mr-2\",\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), \" \", day, \": Full Body Workout\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n            className: `${theme.iconColor} group-open:rotate-180 transition-transform duration-300`,\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: detailsContentStyles,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mb-2 pl-6 italic\",\n            children: \"Focus on proper form and build consistency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"pl-6 mt-1 list-disc text-gray-700 text-sm space-y-1.5\",\n            children: exercises.fullBody.beginner.map((exercise, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: exercise\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, `workout-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this));\n    });\n\n    // Add rest days guidance\n    workoutDetails.push(/*#__PURE__*/_jsxDEV(motion.details, {\n      variants: itemVariants,\n      className: \"rounded-lg overflow-hidden border border-gray-200 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        className: summaryStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `flex items-center text-lg font-semibold ${theme.headingColor}`,\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            className: \"mr-2\",\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), \" Rest Days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n          className: `${theme.iconColor} group-open:rotate-180 transition-transform duration-300`,\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: detailsContentStyles,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-700 text-sm\",\n          children: \"Rest on all non-workout days. Focus on light activity like walking or stretching. Ensure adequate nutrition and sleep for recovery.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)]\n    }, \"rest-days\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this));\n  }\n  // For intermediates (score 40-79): Upper/Lower split (or 3-day full body for lower scores)\n  else if (score >= 40 && score < 80) {\n    if (workoutDays >= 4) {\n      // Upper/Lower split for 4+ days\n      const actualWorkoutDays = recommendedDays.slice(0, Math.min(4, recommendedDays.length));\n      actualWorkoutDays.forEach((day, index) => {\n        const isUpper = index % 2 === 0;\n        workoutDetails.push(/*#__PURE__*/_jsxDEV(motion.details, {\n          variants: itemVariants,\n          className: \"rounded-lg overflow-hidden border border-gray-200 shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            className: summaryStyles,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: `flex items-center text-lg font-semibold ${theme.headingColor}`,\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"mr-2\",\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this), \" \", day, \": \", isUpper ? 'Upper Body' : 'Lower Body']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n              className: `${theme.iconColor} group-open:rotate-180 transition-transform duration-300`,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: detailsContentStyles,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mb-2 pl-6 italic\",\n              children: [\"Focus on \", index < 2 ? 'strength (heavier weights, lower reps)' : 'hypertrophy (moderate weights, higher reps)']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"pl-6 mt-1 list-disc text-gray-700 text-sm space-y-1.5\",\n              children: isUpper ? exercises.upperLower.intermediate.upper.map((ex, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: ex\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 76\n              }, this)) : exercises.upperLower.intermediate.lower.map((ex, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: ex\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 76\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)]\n        }, `workout-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this));\n      });\n    } else {\n      // 3-day full body for lower workout frequency\n      const actualWorkoutDays = recommendedDays.slice(0, Math.min(3, recommendedDays.length));\n      actualWorkoutDays.forEach((day, index) => {\n        workoutDetails.push(/*#__PURE__*/_jsxDEV(motion.details, {\n          variants: itemVariants,\n          className: \"rounded-lg overflow-hidden border border-gray-200 shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            className: summaryStyles,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: `flex items-center text-lg font-semibold ${theme.headingColor}`,\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"mr-2\",\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 17\n              }, this), \" \", day, \": Full Body Workout\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n              className: `${theme.iconColor} group-open:rotate-180 transition-transform duration-300`,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: detailsContentStyles,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mb-2 pl-6 italic\",\n              children: \"Focus on progressive overload and compound movements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"pl-6 mt-1 list-disc text-gray-700 text-sm space-y-1.5\",\n              children: exercises.fullBody.intermediate.map((exercise, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: exercise\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, `workout-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this));\n      });\n    }\n\n    // Add rest days guidance\n    workoutDetails.push(/*#__PURE__*/_jsxDEV(motion.details, {\n      variants: itemVariants,\n      className: \"rounded-lg overflow-hidden border border-gray-200 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        className: summaryStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `flex items-center text-lg font-semibold ${theme.headingColor}`,\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            className: \"mr-2\",\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), \" Rest Days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n          className: `${theme.iconColor} group-open:rotate-180 transition-transform duration-300`,\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: detailsContentStyles,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-700 text-sm\",\n          children: \"Rest on non-workout days. Consider active recovery (light cardio) on 1-2 rest days. Focus on adequate protein intake and quality sleep for optimal recovery.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this)]\n    }, \"rest-days\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this));\n  }\n  // For advanced (score 80+): PPL split for 6 days or Upper/Lower for 4-5 days\n  else {\n    if (workoutDays >= 5) {\n      // PPL Split\n      const workoutTypes = [\"Push\", \"Pull\", \"Legs\", \"Push\", \"Pull\", \"Legs\"];\n      const actualWorkoutDays = recommendedDays.slice(0, Math.min(6, recommendedDays.length));\n      actualWorkoutDays.forEach((day, index) => {\n        const workoutType = workoutTypes[index % workoutTypes.length].toLowerCase();\n        workoutDetails.push(/*#__PURE__*/_jsxDEV(motion.details, {\n          variants: itemVariants,\n          className: \"rounded-lg overflow-hidden border border-gray-200 shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            className: summaryStyles,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: `flex items-center text-lg font-semibold ${theme.headingColor}`,\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"mr-2\",\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this), \" \", day, \": \", workoutTypes[index % workoutTypes.length]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n              className: `${theme.iconColor} group-open:rotate-180 transition-transform duration-300`,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: detailsContentStyles,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mb-2 pl-6 italic\",\n              children: index < 3 ? 'Focus: Strength (heavier weights)' : 'Focus: Hypertrophy (pump focus)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"pl-6 mt-1 list-disc text-gray-700 text-sm space-y-1.5\",\n              children: exercises[workoutType].advanced.map((exercise, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: exercise\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this)]\n        }, `workout-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this));\n      });\n    } else {\n      // Upper/Lower split for 4 days\n      const workoutTypes = [\"Upper\", \"Lower\", \"Upper\", \"Lower\"];\n      const actualWorkoutDays = recommendedDays.slice(0, Math.min(4, recommendedDays.length));\n      actualWorkoutDays.forEach((day, index) => {\n        const isUpper = index % 2 === 0;\n        workoutDetails.push(/*#__PURE__*/_jsxDEV(motion.details, {\n          variants: itemVariants,\n          className: \"rounded-lg overflow-hidden border border-gray-200 shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            className: summaryStyles,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: `flex items-center text-lg font-semibold ${theme.headingColor}`,\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"mr-2\",\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this), \" \", day, \": \", isUpper ? 'Upper Body' : 'Lower Body']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n              className: `${theme.iconColor} group-open:rotate-180 transition-transform duration-300`,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: detailsContentStyles,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mb-2 pl-6 italic\",\n              children: [\"Focus on \", index < 2 ? 'strength-building' : 'volume and hypertrophy']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"pl-6 mt-1 list-disc text-gray-700 text-sm space-y-1.5\",\n              children: isUpper ? exercises.upperLower.advanced.upper.map((ex, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: ex\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 72\n              }, this)) : exercises.upperLower.advanced.lower.map((ex, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: ex\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 72\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this)]\n        }, `workout-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this));\n      });\n    }\n\n    // Add rest day guidance\n    workoutDetails.push(/*#__PURE__*/_jsxDEV(motion.details, {\n      variants: itemVariants,\n      className: \"rounded-lg overflow-hidden border border-gray-200 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        className: summaryStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `flex items-center text-lg font-semibold ${theme.headingColor}`,\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            className: \"mr-2\",\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), \" Rest & Recovery\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n          className: `${theme.iconColor} group-open:rotate-180 transition-transform duration-300`,\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: detailsContentStyles,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-700 text-sm\",\n          children: \"Dedicated rest days are crucial even for advanced lifters. Prioritize protein intake (1.6-2g/kg bodyweight), quality sleep (7-9 hours), and consider active recovery like mobility work, light cardio, or yoga on rest days.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this)]\n    }, \"rest-days\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this));\n  }\n  return workoutDetails;\n}\nexport default SplitPage;\nvar _c;\n$RefreshReg$(_c, \"SplitPage\");","map":{"version":3,"names":["useContext","motion","Activity","ArrowLeft","Info","Calendar","ChevronDown","Link","ConsistencyContext","LoadingState","Card","jsxDEV","_jsxDEV","SplitPage","_s","userData","loading","score","userType","frequency","regularity","recency","pageVariants","initial","opacity","y","in","out","transition","duration","ease","containerVariants","hidden","visible","staggerChildren","itemVariants","getTheme","headerBg","border","accentBg","iconColor","headingColor","textColor","summaryHoverBg","getIdealWorkoutDays","getRecommendedTime","time_pattern","morning","afternoon","evening","getRecommendedDays","day_pattern","dayPattern","sortedDays","Object","entries","sort","a","b","map","entry","workoutDays","weekdays","length","recommendedDays","day","includes","push","slice","renderDynamicWorkoutSplit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","theme","recommendedTime","summaryStyles","detailsContentStyles","splitType","splitDescription","div","variants","animate","size","join","generateWorkoutDetails","exit","delay","to","h1","message","_c","exercises","beginner","intermediate","advanced","pull","legs","fullBody","upperLower","upper","lower","daysOfWeek","difficulty","workoutDetails","Math","min","forEach","index","details","exercise","i","actualWorkoutDays","isUpper","ex","workoutTypes","workoutType","toLowerCase","$RefreshReg$"],"sources":["/home/navadeep/Documents/Projects/MPMC/client/src/pages/SplitPage.jsx"],"sourcesContent":["import { useContext } from 'react';\nimport { motion } from 'framer-motion';\nimport { Activity, ArrowLeft, Info, Calendar, ChevronDown } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport ConsistencyContext from '../context/ConsistencyContext'; \nimport LoadingState from '../components/LoadingState';\nimport Card from '../components/ui/Card';\n\nconst SplitPage = () => {\n  // Destructure context, getting userData and loading state\n  const { userData, loading } = useContext(ConsistencyContext);\n  \n  // Get all relevant data from userData\n  const { \n    score, \n    userType, \n    frequency, \n    regularity, \n    recency \n  } = userData;\n\n  // --- Animation Variants ---\n  const pageVariants = {\n    initial: { opacity: 0, y: 20 },\n    in: { opacity: 1, y: 0 },\n    out: { opacity: 0, y: -20 }\n  };\n  const transition = { duration: 0.4, ease: 'easeInOut' };\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 }\n  };\n  // --- End Animation Variants ---\n\n  // Determine theme based on score\n  const getTheme = () => {\n    if (score >= 80) {\n      return {\n        headerBg: 'bg-green-50',\n        border: 'border-green-200',\n        accentBg: 'bg-green-50',\n        iconColor: 'text-green-600',\n        headingColor: 'text-gray-800',\n        textColor: 'text-gray-600',\n        summaryHoverBg: 'hover:bg-green-100'\n      };\n    } else if (score >= 40) {\n      return {\n        headerBg: 'bg-blue-50',\n        border: 'border-blue-200',\n        accentBg: 'bg-blue-50',\n        iconColor: 'text-blue-600',\n        headingColor: 'text-gray-800',\n        textColor: 'text-gray-600',\n        summaryHoverBg: 'hover:bg-blue-100'\n      };\n    } else {\n      return {\n        headerBg: 'bg-amber-50',\n        border: 'border-amber-200',\n        accentBg: 'bg-amber-50',\n        iconColor: 'text-amber-600',\n        headingColor: 'text-gray-800',\n        textColor: 'text-gray-600',\n        summaryHoverBg: 'hover:bg-amber-100'\n      };\n    }\n  };\n\n  // Determine workout frequency based on regularity and score\n  const getIdealWorkoutDays = () => {\n    if (score >= 80) return 5;  // More advanced users can handle 5-6 workouts\n    if (score >= 60) return 4;  // Consistent intermediate users: 4 days\n    if (score >= 40) return 3;  // Beginning intermediate users: 3 days\n    return 2;  // Beginners: 2-3 days\n  };\n\n  // Analyze time pattern to recommend workout times\n  const getRecommendedTime = () => {\n    if (!regularity || !regularity.time_pattern) return \"morning\";\n    \n    const { morning = 0, afternoon = 0, evening = 0 } = regularity.time_pattern;\n    if (morning > afternoon && morning > evening) return \"morning\";\n    if (evening > morning && evening > afternoon) return \"evening\";\n    return \"afternoon\"; \n  };\n\n  // Analyze day pattern to recommend workout days\n  const getRecommendedDays = () => {\n    if (!regularity || !regularity.day_pattern) {\n      return [\"Monday\", \"Wednesday\", \"Friday\"]; // Default\n    }\n\n    // Get days sorted by frequency\n    const dayPattern = regularity.day_pattern;\n    const sortedDays = Object.entries(dayPattern)\n      .sort((a, b) => b[1] - a[1])\n      .map(entry => entry[0]);\n    \n    const workoutDays = getIdealWorkoutDays();\n    const weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    \n    // If we can't get enough days from their pattern, use most frequent plus defaults\n    if (sortedDays.length < workoutDays) {\n      const recommendedDays = [...sortedDays];\n      for (const day of weekdays) {\n        if (!recommendedDays.includes(day)) {\n          recommendedDays.push(day);\n          if (recommendedDays.length === workoutDays) break;\n        }\n      }\n      return recommendedDays;\n    }\n    \n    // Return their top most frequent days\n    return sortedDays.slice(0, workoutDays);\n  };\n\n  // Generate dynamic workout split based on user data\n  const renderDynamicWorkoutSplit = () => {\n    if (!score && score !== 0) {\n      return (\n        <Card className=\"p-6 text-center\">\n          <p className=\"text-orange-600\">Workout split information is currently unavailable.</p>\n        </Card>\n      );\n    }\n    \n    const theme = getTheme();\n    const workoutDays = getIdealWorkoutDays();\n    const recommendedTime = getRecommendedTime();\n    const recommendedDays = getRecommendedDays();\n    const summaryStyles = `flex items-center justify-between w-full p-4 ${theme.accentBg} rounded-lg cursor-pointer ${theme.summaryHoverBg} transition-colors group`;\n    const detailsContentStyles = `p-4 pt-2 pb-4 bg-white rounded-b-lg`;\n    \n    // Determine split type based on score and regularity\n    let splitType, splitDescription;\n    \n    if (score >= 80) {\n      splitType = \"Advanced Split\";\n      splitDescription = workoutDays >= 5 \n        ? \"Push/Pull/Legs split for optimal muscle growth\" \n        : \"Upper/Lower body split with high intensity\";\n    } else if (score >= 40) {\n      splitType = \"Intermediate Split\";\n      splitDescription = workoutDays >= 4 \n        ? \"Upper/Lower split focusing on strength and hypertrophy\" \n        : \"3-day full body with progressive overload\";\n    } else {\n      splitType = \"Beginner-Friendly Split\";\n      splitDescription = \"Full body workouts focusing on form and consistency\";\n    }\n    \n    return (\n      <motion.div\n        variants={containerVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n        className={`bg-white rounded-xl shadow-card overflow-hidden border ${theme.border}`}\n      >\n        <div className={`${theme.headerBg} p-6 border-b ${theme.border}`}>\n          <div className=\"flex items-center\">\n            <Activity className={`mr-3 ${theme.iconColor}`} size={28} />\n            <h2 className={`text-2xl font-bold ${theme.headingColor}`}>\n              {userType ? `${userType} - ${splitType}` : splitType}\n            </h2>\n          </div>\n          <p className={`mt-2 ${theme.textColor}`}>{splitDescription}</p>\n        </div>\n\n        <div className=\"p-6 space-y-4\">\n          <motion.div variants={itemVariants} className={`flex items-start text-gray-700 ${theme.accentBg} p-4 rounded-lg border ${theme.border}`}>\n            <Info size={20} className={`mr-3 ${theme.iconColor} mt-0.5 flex-shrink-0`} />\n            <div>\n              <p className=\"text-sm mb-2\">\n                Based on your consistency score of <span className=\"font-semibold\">{score}</span> and activity patterns, \n                we recommend training <span className=\"font-semibold\">{workoutDays} days/week</span> during \n                the <span className=\"font-semibold\">{recommendedTime}</span>.\n              </p>\n              <p className=\"text-sm\">\n                Your most consistent days are: <span className=\"font-semibold\">{recommendedDays.join(\", \")}</span>\n              </p>\n            </div>\n          </motion.div>\n\n          {/* Generate workout days based on user's score */}\n          {generateWorkoutDetails(score, recommendedDays, workoutDays, theme, itemVariants, summaryStyles, detailsContentStyles)}\n        </div>\n      </motion.div>\n    );\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={transition}\n      className=\"container mx-auto px-4 py-8\"\n    >\n      {/* Back Link */}\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ delay: 0.2 }}>\n        <Link to=\"/\" className=\"inline-flex items-center text-sm text-indigo-600 hover:text-indigo-800 mb-6 group font-medium\">\n          <ArrowLeft size={16} className=\"mr-1 group-hover:-translate-x-1 transition-transform\" />\n          Back to Dashboard\n        </Link>\n      </motion.div>\n\n      {/* Page Header */}\n      <motion.h1\n        initial={{ opacity: 0, y: -10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.1 }}\n        className=\"flex items-center text-3xl font-bold text-gray-800 mb-8\"\n      >\n        <Activity className=\"mr-3 text-indigo-600\" size={30}/>\n        Your Personalized Workout Plan\n      </motion.h1>\n\n      {/* Loading State or Split */}\n      {loading ? (\n        <Card className=\"flex items-center justify-center min-h-[400px]\">\n          <LoadingState message=\"Creating Your Workout Plan...\" />\n        </Card>\n      ) : (\n        renderDynamicWorkoutSplit()\n      )}\n    </motion.div>\n  );\n};\n\n// Helper function to generate workout details based on user score\nfunction generateWorkoutDetails(score, recommendedDays, workoutDays, theme, itemVariants, summaryStyles, detailsContentStyles) {\n  // Default exercises by category\n  const exercises = {\n    push: {\n      beginner: [\n        \"Push-ups: 3 sets x 8-12 reps\",\n        \"Dumbbell Shoulder Press: 3 sets x 10-12 reps\",\n        \"Incline Dumbbell Press: 3 sets x 10-12 reps\", \n        \"Tricep Dips (assisted if needed): 3 sets x 8-12 reps\"\n      ],\n      intermediate: [\n        \"Bench Press: 4 sets x 8-10 reps\",\n        \"Incline Dumbbell Press: 3 sets x 10-12 reps\",\n        \"Overhead Press: 3 sets x 8-10 reps\",\n        \"Lateral Raises: 3 sets x 12-15 reps\",\n        \"Tricep Pushdowns: 3 sets x 12-15 reps\"\n      ],\n      advanced: [\n        \"Barbell Bench Press: 4 sets x 6-8 reps\",\n        \"Incline Dumbbell Press: 4 sets x 8-10 reps\",\n        \"Overhead Press: 3 sets x 8-10 reps\",\n        \"Cable Flyes: 3 sets x 12-15 reps\",\n        \"Skull Crushers: 3 sets x 10-12 reps\",\n        \"Lateral Raises: 4 sets x 12-15 reps\"\n      ]\n    },\n    pull: {\n      beginner: [\n        \"Dumbbell Rows: 3 sets x 10-12 reps\",\n        \"Lat Pulldowns: 3 sets x 10-12 reps\",\n        \"Face Pulls: 3 sets x 12-15 reps\",\n        \"Bicep Curls: 3 sets x 10-12 reps\"\n      ],\n      intermediate: [\n        \"Pull-ups (assisted if needed): 3 sets x 6-10 reps\",\n        \"Barbell Rows: 3 sets x 8-10 reps\",\n        \"Seated Cable Rows: 3 sets x 10-12 reps\",\n        \"Face Pulls: 3 sets x 15-20 reps\",\n        \"Bicep Curls: 3 sets x 10-12 reps\"\n      ],\n      advanced: [\n        \"Weighted Pull-ups: 4 sets x 6-8 reps\",\n        \"Barbell Rows: 4 sets x 6-10 reps\",\n        \"Deadlifts: 4 sets x 5-8 reps\",\n        \"Cable Rows: 3 sets x 10-12 reps\",\n        \"Barbell Curls: 4 sets x 8-10 reps\",\n        \"Hammer Curls: 3 sets x 10-12 reps\"\n      ]\n    },\n    legs: {\n      beginner: [\n        \"Goblet Squats: 3 sets x 10-12 reps\",\n        \"Romanian Deadlifts: 3 sets x 10-12 reps\",\n        \"Leg Press: 3 sets x 12-15 reps\",\n        \"Calf Raises: 3 sets x 15-20 reps\"\n      ],\n      intermediate: [\n        \"Barbell Squats: 4 sets x 8-10 reps\",\n        \"Romanian Deadlifts: 3 sets x 8-10 reps\",\n        \"Walking Lunges: 3 sets x 10 reps per leg\",\n        \"Leg Extensions: 3 sets x 12-15 reps\",\n        \"Leg Curls: 3 sets x 12-15 reps\",\n        \"Calf Raises: 4 sets x 15-20 reps\"\n      ],\n      advanced: [\n        \"Back Squats: 5 sets x 5-8 reps\",\n        \"Romanian Deadlifts: 4 sets x 8-10 reps\",\n        \"Leg Press: 4 sets x 10-12 reps\",\n        \"Walking Lunges: 3 sets x 12 reps per leg\",\n        \"Leg Extensions: 3 sets x 12-15 reps\",\n        \"Leg Curls: 3 sets x 12-15 reps\",\n        \"Standing Calf Raises: 5 sets x 15-20 reps\"\n      ]\n    },\n    fullBody: {\n      beginner: [\n        \"Goblet Squats: 3 sets x 10-12 reps\",\n        \"Push-ups (or knee push-ups): 3 sets x 8-12 reps\",\n        \"Dumbbell Rows: 3 sets x 10-12 reps per arm\",\n        \"Dumbbell Shoulder Press: 3 sets x 10-12 reps\",\n        \"Plank: 3 sets x 30-45 seconds\"\n      ],\n      intermediate: [\n        \"Barbell Squats: 3 sets x 8-10 reps\",\n        \"Bench Press: 3 sets x 8-10 reps\",\n        \"Bent-Over Rows: 3 sets x 8-10 reps\", \n        \"Overhead Press: 3 sets x 8-10 reps\",\n        \"Romanian Deadlifts: 3 sets x 8-10 reps\",\n        \"Bicep Curls: 3 sets x 10-12 reps\",\n        \"Tricep Extensions: 3 sets x 10-12 reps\"\n      ]\n    },\n    upperLower: {\n      intermediate: {\n        upper: [\n          \"Bench Press: 3 sets x 6-10 reps\",\n          \"Barbell Rows: 3 sets x 8-10 reps\",\n          \"Overhead Press: 3 sets x 8-10 reps\",\n          \"Lat Pulldowns: 3 sets x 10-12 reps\",\n          \"Incline Dumbbell Press: 3 sets x 10-12 reps\",\n          \"Bicep Curls: 3 sets x 10-12 reps\",\n          \"Tricep Pushdowns: 3 sets x 10-12 reps\"\n        ],\n        lower: [\n          \"Barbell Squats: 3 sets x 6-10 reps\",\n          \"Romanian Deadlifts: 3 sets x 8-10 reps\",\n          \"Leg Press: 3 sets x 10-12 reps\",\n          \"Walking Lunges: 3 sets x 10 reps per leg\",\n          \"Leg Extensions: 3 sets x 12-15 reps\",\n          \"Leg Curls: 3 sets x 12-15 reps\",\n          \"Calf Raises: 4 sets x 15-20 reps\",\n          \"Planks: 3 sets x 45-60 seconds\"\n        ]\n      },\n      advanced: {\n        upper: [\n          \"Bench Press: 4 sets x 6-8 reps\",\n          \"Weighted Pull-ups: 4 sets x 6-8 reps\",\n          \"Overhead Press: 4 sets x 6-8 reps\",\n          \"Barbell Rows: 4 sets x 6-8 reps\",\n          \"Incline Dumbbell Press: 3 sets x 8-10 reps\",\n          \"Lateral Raises: 3 sets x 12-15 reps\",\n          \"Skull Crushers: 3 sets x 10-12 reps\",\n          \"Barbell Curls: 3 sets x 10-12 reps\"\n        ],\n        lower: [\n          \"Barbell Squats: 5 sets x 5-8 reps\",\n          \"Romanian Deadlifts: 4 sets x 6-8 reps\",\n          \"Leg Press: 4 sets x 8-10 reps\",\n          \"Bulgarian Split Squats: 3 sets x 8-10 reps per leg\",\n          \"Leg Extensions: 3 sets x 12-15 reps\",\n          \"Leg Curls: 3 sets x 12-15 reps\",\n          \"Standing Calf Raises: 4 sets x 15-20 reps\",\n          \"Hanging Leg Raises: 3 sets x 12-15 reps\"\n        ]\n      }\n    }\n  };\n\n  // Sort workout days to match recommended days if possible\n  const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  \n  // Get appropriate category of difficulty\n  let difficulty;\n  if (score >= 80) {\n    difficulty = \"advanced\";\n  } else if (score >= 40) {\n    difficulty = \"intermediate\";\n  } else {\n    difficulty = \"beginner\";\n  }\n\n  // Generate workout details based on score and frequency\n  const workoutDetails = [];\n  \n  // For beginners (score < 40): Full body workouts 2-3x per week\n  if (score < 40) {\n    const workoutDays = recommendedDays.slice(0, Math.min(3, recommendedDays.length));\n    \n    // Create full body workouts for each day\n    workoutDays.forEach((day, index) => {\n      workoutDetails.push(\n        <motion.details key={`workout-${index}`} variants={itemVariants} className=\"rounded-lg overflow-hidden border border-gray-200 shadow-sm\">\n          <summary className={summaryStyles}>\n            <h3 className={`flex items-center text-lg font-semibold ${theme.headingColor}`}>\n              <Calendar className=\"mr-2\" size={18} /> {day}: Full Body Workout\n            </h3>\n            <ChevronDown className={`${theme.iconColor} group-open:rotate-180 transition-transform duration-300`} size={20} />\n          </summary>\n          <div className={detailsContentStyles}>\n            <p className=\"text-xs text-gray-500 mb-2 pl-6 italic\">\n              Focus on proper form and build consistency\n            </p>\n            <ul className=\"pl-6 mt-1 list-disc text-gray-700 text-sm space-y-1.5\">\n              {exercises.fullBody.beginner.map((exercise, i) => (\n                <li key={i}>{exercise}</li>\n              ))}\n            </ul>\n          </div>\n        </motion.details>\n      );\n    });\n    \n    // Add rest days guidance\n    workoutDetails.push(\n      <motion.details key=\"rest-days\" variants={itemVariants} className=\"rounded-lg overflow-hidden border border-gray-200 shadow-sm\">\n        <summary className={summaryStyles}>\n          <h3 className={`flex items-center text-lg font-semibold ${theme.headingColor}`}>\n            <Calendar className=\"mr-2\" size={18} /> Rest Days\n          </h3>\n          <ChevronDown className={`${theme.iconColor} group-open:rotate-180 transition-transform duration-300`} size={20} />\n        </summary>\n        <div className={detailsContentStyles}>\n          <p className=\"mt-2 text-gray-700 text-sm\">\n            Rest on all non-workout days. Focus on light activity like walking or stretching. \n            Ensure adequate nutrition and sleep for recovery.\n          </p>\n        </div>\n      </motion.details>\n    );\n  } \n  // For intermediates (score 40-79): Upper/Lower split (or 3-day full body for lower scores)\n  else if (score >= 40 && score < 80) {\n    if (workoutDays >= 4) {\n      // Upper/Lower split for 4+ days\n      const actualWorkoutDays = recommendedDays.slice(0, Math.min(4, recommendedDays.length));\n      \n      actualWorkoutDays.forEach((day, index) => {\n        const isUpper = index % 2 === 0;\n        workoutDetails.push(\n          <motion.details key={`workout-${index}`} variants={itemVariants} className=\"rounded-lg overflow-hidden border border-gray-200 shadow-sm\">\n            <summary className={summaryStyles}>\n              <h3 className={`flex items-center text-lg font-semibold ${theme.headingColor}`}>\n                <Calendar className=\"mr-2\" size={18} /> {day}: {isUpper ? 'Upper Body' : 'Lower Body'}\n              </h3>\n              <ChevronDown className={`${theme.iconColor} group-open:rotate-180 transition-transform duration-300`} size={20} />\n            </summary>\n            <div className={detailsContentStyles}>\n              <p className=\"text-xs text-gray-500 mb-2 pl-6 italic\">\n                Focus on {index < 2 ? 'strength (heavier weights, lower reps)' : 'hypertrophy (moderate weights, higher reps)'}\n              </p>\n              <ul className=\"pl-6 mt-1 list-disc text-gray-700 text-sm space-y-1.5\">\n                {isUpper \n                  ? exercises.upperLower.intermediate.upper.map((ex, i) => <li key={i}>{ex}</li>)\n                  : exercises.upperLower.intermediate.lower.map((ex, i) => <li key={i}>{ex}</li>)\n                }\n              </ul>\n            </div>\n          </motion.details>\n        );\n      });\n    } else {\n      // 3-day full body for lower workout frequency\n      const actualWorkoutDays = recommendedDays.slice(0, Math.min(3, recommendedDays.length));\n      \n      actualWorkoutDays.forEach((day, index) => {\n        workoutDetails.push(\n          <motion.details key={`workout-${index}`} variants={itemVariants} className=\"rounded-lg overflow-hidden border border-gray-200 shadow-sm\">\n            <summary className={summaryStyles}>\n              <h3 className={`flex items-center text-lg font-semibold ${theme.headingColor}`}>\n                <Calendar className=\"mr-2\" size={18} /> {day}: Full Body Workout\n              </h3>\n              <ChevronDown className={`${theme.iconColor} group-open:rotate-180 transition-transform duration-300`} size={20} />\n            </summary>\n            <div className={detailsContentStyles}>\n              <p className=\"text-xs text-gray-500 mb-2 pl-6 italic\">\n                Focus on progressive overload and compound movements\n              </p>\n              <ul className=\"pl-6 mt-1 list-disc text-gray-700 text-sm space-y-1.5\">\n                {exercises.fullBody.intermediate.map((exercise, i) => (\n                  <li key={i}>{exercise}</li>\n                ))}\n              </ul>\n            </div>\n          </motion.details>\n        );\n      });\n    }\n    \n    // Add rest days guidance\n    workoutDetails.push(\n      <motion.details key=\"rest-days\" variants={itemVariants} className=\"rounded-lg overflow-hidden border border-gray-200 shadow-sm\">\n        <summary className={summaryStyles}>\n          <h3 className={`flex items-center text-lg font-semibold ${theme.headingColor}`}>\n            <Calendar className=\"mr-2\" size={18} /> Rest Days\n          </h3>\n          <ChevronDown className={`${theme.iconColor} group-open:rotate-180 transition-transform duration-300`} size={20} />\n        </summary>\n        <div className={detailsContentStyles}>\n          <p className=\"mt-2 text-gray-700 text-sm\">\n            Rest on non-workout days. Consider active recovery (light cardio) on 1-2 rest days.\n            Focus on adequate protein intake and quality sleep for optimal recovery.\n          </p>\n        </div>\n      </motion.details>\n    );\n  } \n  // For advanced (score 80+): PPL split for 6 days or Upper/Lower for 4-5 days\n  else {\n    if (workoutDays >= 5) {\n      // PPL Split\n      const workoutTypes = [\"Push\", \"Pull\", \"Legs\", \"Push\", \"Pull\", \"Legs\"];\n      const actualWorkoutDays = recommendedDays.slice(0, Math.min(6, recommendedDays.length));\n      \n      actualWorkoutDays.forEach((day, index) => {\n        const workoutType = workoutTypes[index % workoutTypes.length].toLowerCase();\n        workoutDetails.push(\n          <motion.details key={`workout-${index}`} variants={itemVariants} className=\"rounded-lg overflow-hidden border border-gray-200 shadow-sm\">\n            <summary className={summaryStyles}>\n              <h3 className={`flex items-center text-lg font-semibold ${theme.headingColor}`}>\n                <Calendar className=\"mr-2\" size={18} /> {day}: {workoutTypes[index % workoutTypes.length]}\n              </h3>\n              <ChevronDown className={`${theme.iconColor} group-open:rotate-180 transition-transform duration-300`} size={20} />\n            </summary>\n            <div className={detailsContentStyles}>\n              <p className=\"text-xs text-gray-500 mb-2 pl-6 italic\">\n                {index < 3 ? 'Focus: Strength (heavier weights)' : 'Focus: Hypertrophy (pump focus)'}\n              </p>\n              <ul className=\"pl-6 mt-1 list-disc text-gray-700 text-sm space-y-1.5\">\n                {exercises[workoutType].advanced.map((exercise, i) => (\n                  <li key={i}>{exercise}</li>\n                ))}\n              </ul>\n            </div>\n          </motion.details>\n        );\n      });\n    } else {\n      // Upper/Lower split for 4 days\n      const workoutTypes = [\"Upper\", \"Lower\", \"Upper\", \"Lower\"];\n      const actualWorkoutDays = recommendedDays.slice(0, Math.min(4, recommendedDays.length));\n      \n      actualWorkoutDays.forEach((day, index) => {\n        const isUpper = index % 2 === 0;\n        workoutDetails.push(\n          <motion.details key={`workout-${index}`} variants={itemVariants} className=\"rounded-lg overflow-hidden border border-gray-200 shadow-sm\">\n            <summary className={summaryStyles}>\n              <h3 className={`flex items-center text-lg font-semibold ${theme.headingColor}`}>\n                <Calendar className=\"mr-2\" size={18} /> {day}: {isUpper ? 'Upper Body' : 'Lower Body'}\n              </h3>\n              <ChevronDown className={`${theme.iconColor} group-open:rotate-180 transition-transform duration-300`} size={20} />\n            </summary>\n            <div className={detailsContentStyles}>\n              <p className=\"text-xs text-gray-500 mb-2 pl-6 italic\">\n                Focus on {index < 2 ? 'strength-building' : 'volume and hypertrophy'}\n              </p>\n              <ul className=\"pl-6 mt-1 list-disc text-gray-700 text-sm space-y-1.5\">\n                {isUpper \n                  ? exercises.upperLower.advanced.upper.map((ex, i) => <li key={i}>{ex}</li>)\n                  : exercises.upperLower.advanced.lower.map((ex, i) => <li key={i}>{ex}</li>)\n                }\n              </ul>\n            </div>\n          </motion.details>\n        );\n      });\n    }\n    \n    // Add rest day guidance\n    workoutDetails.push(\n      <motion.details key=\"rest-days\" variants={itemVariants} className=\"rounded-lg overflow-hidden border border-gray-200 shadow-sm\">\n        <summary className={summaryStyles}>\n          <h3 className={`flex items-center text-lg font-semibold ${theme.headingColor}`}>\n            <Calendar className=\"mr-2\" size={18} /> Rest & Recovery\n          </h3>\n          <ChevronDown className={`${theme.iconColor} group-open:rotate-180 transition-transform duration-300`} size={20} />\n        </summary>\n        <div className={detailsContentStyles}>\n          <p className=\"mt-2 text-gray-700 text-sm\">\n            Dedicated rest days are crucial even for advanced lifters. Prioritize protein intake (1.6-2g/kg bodyweight), \n            quality sleep (7-9 hours), and consider active recovery like mobility work, light cardio, or yoga on rest days.\n          </p>\n        </div>\n      </motion.details>\n    );\n  }\n  \n  return workoutDetails;\n}\n\nexport default SplitPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}