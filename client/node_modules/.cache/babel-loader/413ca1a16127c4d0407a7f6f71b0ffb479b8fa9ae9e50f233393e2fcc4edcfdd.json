{"ast":null,"code":"import { createContext } from 'react';\n\n// Initial state for user data\nexport const initialUserState = {\n  profile: {\n    rfid: \"\",\n    name: \"\",\n    email: \"\",\n    joinDate: \"\"\n  },\n  score: 0,\n  scoreHistory: [],\n  insights: [],\n  userType: \"\",\n  workoutPlan: null\n};\n\n// Create context with initial shape and methods\nconst ConsistencyContext = /*#__PURE__*/createContext({\n  userData: initialUserState,\n  loading: false,\n  isLoggedIn: false,\n  loginUser: () => {},\n  logoutUser: () => {},\n  refreshScore: () => {}\n});\nexport default ConsistencyContext;","map":{"version":3,"names":["createContext","initialUserState","profile","rfid","name","email","joinDate","score","scoreHistory","insights","userType","workoutPlan","ConsistencyContext","userData","loading","isLoggedIn","loginUser","logoutUser","refreshScore"],"sources":["/home/navadeep/Documents/Projects/MPMC/client/src/context/ConsistencyContext.js"],"sourcesContent":["import { createContext } from 'react';\n\n// Initial state for user data\nexport const initialUserState = {\n  profile: {\n    rfid: \"\",\n    name: \"\",\n    email: \"\",\n    joinDate: \"\"\n  },\n  score: 0,\n  scoreHistory: [],\n  insights: [],\n  userType: \"\",\n  workoutPlan: null\n};\n\n// Create context with initial shape and methods\nconst ConsistencyContext = createContext({\n  userData: initialUserState,\n  loading: false,\n  isLoggedIn: false,\n  loginUser: () => {},\n  logoutUser: () => {},\n  refreshScore: () => {}\n});\n\nexport default ConsistencyContext;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;;AAErC;AACA,OAAO,MAAMC,gBAAgB,GAAG;EAC9BC,OAAO,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC;EACDC,KAAK,EAAE,CAAC;EACRC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,kBAAkB,gBAAGZ,aAAa,CAAC;EACvCa,QAAQ,EAAEZ,gBAAgB;EAC1Ba,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;EACnBC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAC;EACpBC,YAAY,EAAEA,CAAA,KAAM,CAAC;AACvB,CAAC,CAAC;AAEF,eAAeN,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}